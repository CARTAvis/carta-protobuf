.. cssclass:: f2b

.. _catalogfileinforequest:

CatalogFileInfoRequest
^^^^^^^^^^^^^^^^^^^^^^

Source file: `catalog_file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/catalog_file_info.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - 
   * - name
     - string
     - 
     - 

.. cssclass:: b2f

.. _catalogfileinforesponse:

CatalogFileInfoResponse
^^^^^^^^^^^^^^^^^^^^^^^

Source file: `catalog_file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/catalog_file_info.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - 
   * - message
     - string
     - 
     - 
   * - file_info
     - :carta:`CatalogFileInfo`
     - 
     - 
   * - headers
     - :carta:`CatalogHeader`
     - repeated
     - 

.. cssclass:: f2b

.. _cataloglistrequest:

CatalogListRequest
^^^^^^^^^^^^^^^^^^

Source file: `catalog_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/catalog_list.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - 

.. cssclass:: b2f

.. _cataloglistresponse:

CatalogListResponse
^^^^^^^^^^^^^^^^^^^

Source file: `catalog_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/catalog_list.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - 
   * - message
     - string
     - 
     - 
   * - directory
     - string
     - 
     - 
   * - parent
     - string
     - 
     - 
   * - files
     - :carta:`CatalogFileInfo`
     - repeated
     - 
   * - subdirectories
     - string
     - repeated
     - 

.. cssclass:: f2b

.. _fileinforequest:

FileInfoRequest
^^^^^^^^^^^^^^^

Source file: `file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/file_info.proto>`_

FILE_INFO_REQUEST:
Requests the file info for a specific file.
Backend responds with :carta:`FILE_INFO_RESPONSE`

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - Required directory name
   * - file
     - string
     - 
     - Required file name
   * - hdu
     - string
     - 
     - Required HDU name (if applicable). If left empty, the first HDU is selected

.. cssclass:: b2f

.. _fileinforesponse:

FileInfoResponse
^^^^^^^^^^^^^^^^

Source file: `file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/file_info.proto>`_

FILE_INFO_RESPONSE
Response for :carta:`FILE_INFO_REQUEST`.
Gives information on the requested file

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - Defines whether the :carta:`FILE_INFO_REQUEST` was successful
   * - message
     - string
     - 
     - Error message (if applicable)
   * - file_info
     - :carta:`FileInfo`
     - 
     - Basic file info (type, size)
   * - file_info_extended
     - :carta:`FileInfoExtended`
     - 
     - Extended file info (WCS, header info)

.. cssclass:: f2b

.. _filelistrequest:

FileListRequest
^^^^^^^^^^^^^^^

Source file: `file_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/file_list.proto>`_

FILE_LIST_REQUEST:
Requests the list of available files for a given directory.
Backend responds with :carta:`FILE_LIST_RESPONSE`

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - Required directory name

.. cssclass:: b2f

.. _filelistresponse:

FileListResponse
^^^^^^^^^^^^^^^^

Source file: `file_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/file_list.proto>`_

FILE_LIST_RESPONSE
Response for :carta:`FILE_LIST_REQUEST`.
Gives a list of available files (and their types), as well as subdirectories

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - Defines whether the :carta:`FILE_LIST_REQUEST` was successful
   * - message
     - string
     - 
     - Error message (if applicable)
   * - directory
     - string
     - 
     - Directory of listing
   * - parent
     - string
     - 
     - Directory parent (null/empty if top-level)
   * - files
     - :carta:`FileInfo`
     - repeated
     - List of available image files, with file type information and size information.
   * - subdirectories
     - string
     - repeated
     - List of available subdirectories

.. cssclass:: b2f

.. _momentprogress:

MomentProgress
^^^^^^^^^^^^^^

Source file: `moment_request.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/moment_request.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - progress
     - float
     - 
     - 

.. cssclass:: f2b

.. _momentrequest:

MomentRequest
^^^^^^^^^^^^^

Source file: `moment_request.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/moment_request.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - moments
     - :carta:`Moment`
     - repeated
     - 
   * - axis
     - :carta:`MomentAxis`
     - 
     - 
   * - region_id
     - sfixed32
     - 
     - 
   * - spectral_range
     - :carta:`IntBounds`
     - 
     - 
   * - mask
     - :carta:`MomentMask`
     - 
     - 
   * - pixel_range
     - :carta:`FloatBounds`
     - 
     - 

.. cssclass:: b2f

.. _momentresponse:

MomentResponse
^^^^^^^^^^^^^^

Source file: `moment_request.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/moment_request.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - 
   * - message
     - string
     - 
     - 
   * - open_file_acks
     - :carta:`OpenFileAck`
     - repeated
     - 

.. cssclass:: f2b

.. _regionfileinforequest:

RegionFileInfoRequest
^^^^^^^^^^^^^^^^^^^^^

Source file: `region_file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/region_file_info.proto>`_

REGION_FILE_INFO_REQUEST:
Requests contents for a specific region file on the server
Backend responds with :carta:`REGION_FILE_INFO_RESPONSE`

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - Required directory name
   * - file
     - string
     - 
     - Required file name

.. cssclass:: b2f

.. _regionfileinforesponse:

RegionFileInfoResponse
^^^^^^^^^^^^^^^^^^^^^^

Source file: `region_file_info.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/region_file_info.proto>`_

REGION_FILE_INFO_RESPONSE
Response for :carta:`REGION_FILE_INFO_REQUEST`.
Gives information on the requested file

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - Defines whether the REGION_INFO_REQUEST was successful
   * - message
     - string
     - 
     - Error message (if applicable)
   * - file_info
     - :carta:`FileInfo`
     - 
     - Basic info about region file
   * - contents
     - string
     - repeated
     - Contents of file; each string is a line

.. cssclass:: f2b

.. _regionlistrequest:

RegionListRequest
^^^^^^^^^^^^^^^^^

Source file: `region_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/region_list.proto>`_

REGION_LIST_REQUEST:
Requests the list of available region files for a given directory.
Backend responds with :carta:`REGION_LIST_RESPONSE`

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - directory
     - string
     - 
     - Required directory name

.. cssclass:: b2f

.. _regionlistresponse:

RegionListResponse
^^^^^^^^^^^^^^^^^^

Source file: `region_list.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/region_list.proto>`_

REGION_LIST_RESPONSE
Response for :carta:`REGION_LIST_REQUEST`.
Gives a list of available region files (and their types), as well as subdirectories

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - success
     - bool
     - 
     - Defines whether the :carta:`REGION_LIST_REQUEST` was successful
   * - message
     - string
     - 
     - Error message (if applicable)
   * - directory
     - string
     - 
     - Directory of listing
   * - parent
     - string
     - 
     - Directory parent (null/empty if top-level)
   * - files
     - :carta:`FileInfo`
     - repeated
     - List of available image files, with file type information and size information.
   * - subdirectories
     - string
     - repeated
     - List of available subdirectories

.. cssclass:: f2b

.. _savefile:

SaveFile
^^^^^^^^

Source file: `save_file.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/save_file.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - output_file_directory
     - string
     - 
     - 
   * - output_file_name
     - string
     - 
     - 
   * - output_file_type
     - :carta:`FileType`
     - 
     - 

.. cssclass:: f2b

.. _savefileack:

SaveFileAck
^^^^^^^^^^^

Source file: `save_file.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/save_file.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - success
     - bool
     - 
     - 
   * - message
     - string
     - 
     - 

.. cssclass:: f2b

.. _scriptingrequest:

ScriptingRequest
^^^^^^^^^^^^^^^^

Source file: `scripting.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/scripting.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - scripting_request_id
     - sfixed32
     - 
     - Used to connect a single scripting request to its response
   * - target
     - string
     - 
     - the path of the target object. e.g. activeFrame.renderConfig
   * - action
     - string
     - 
     - the name of the function to call. e.g. setColorMap
   * - parameters
     - string
     - 
     - JSON array of paramters. e.g. '["viridis"]'
   * - async
     - bool
     - 
     - flag indicating whether the frontend should execute this asynchronously, or only return once the call is complete

.. cssclass:: b2f

.. _scriptingresponse:

ScriptingResponse
^^^^^^^^^^^^^^^^^

Source file: `scripting.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/request/scripting.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - scripting_request_id
     - sfixed32
     - 
     - should match the incoming request ID
   * - success
     - bool
     - 
     - indicates whether the call was correctly executed
   * - message
     - string
     - 
     - optional error message
   * - response
     - string
     - 
     - JSON-parsable response. e.g. "true", or the base64-encoded string

