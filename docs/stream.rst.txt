.. cssclass:: f2b

.. _catalogfilterrequest:

CatalogFilterRequest
^^^^^^^^^^^^^^^^^^^^

Source file: `catalog_filter.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/catalog_filter.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - column_indices
     - int32
     - repeated
     - 
   * - filter_configs
     - :carta:`FilterConfig`
     - repeated
     - 
   * - subset_data_size
     - sfixed32
     - 
     - 
   * - subset_start_index
     - sfixed32
     - 
     - 
   * - image_bounds
     - :carta:`CatalogImageBounds`
     - 
     - 
   * - image_file_id
     - sfixed32
     - 
     - 
   * - region_id
     - sfixed32
     - 
     - 
   * - sort_column
     - string
     - 
     - 
   * - sorting_type
     - :carta:`SortingType`
     - 
     - 

.. cssclass:: b2f

.. _catalogfilterresponse:

CatalogFilterResponse
^^^^^^^^^^^^^^^^^^^^^

Source file: `catalog_filter.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/catalog_filter.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - 
   * - image_file_id
     - sfixed32
     - 
     - 
   * - region_id
     - sfixed32
     - 
     - 
   * - columns
     - map<key: fixed32, value: :carta:`ColumnData`>
     - repeated
     - 
   * - subset_data_size
     - sfixed32
     - 
     - 
   * - subset_end_index
     - sfixed32
     - 
     - 
   * - progress
     - float
     - 
     - 
   * - filter_data_size
     - sfixed32
     - 
     - 
   * - request_end_index
     - sfixed32
     - 
     - 

.. cssclass:: b2f

.. _contourimagedata:

ContourImageData
^^^^^^^^^^^^^^^^

Source file: `contour_image.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/contour_image.proto>`_

CONTOUR_IMAGE_DATA:
Data for an image rendered in contour mode.

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the contour image corresponds to
   * - reference_file_id
     - fixed32
     - 
     - The file ID of the reference image that the contour vertices are mapped to
   * - image_bounds
     - :carta:`ImageBounds`
     - 
     - The bounding box in the XY plane corresponding to the image data in pixel coordinates
   * - channel
     - sfixed32
     - 
     - The image channel used to generate the contours
   * - stokes
     - sfixed32
     - 
     - The image stokes parameter used to generate the contours
   * - contour_sets
     - :carta:`ContourSet`
     - repeated
     - Each contour set consists of the contour level value, as well as a list of coordinates. The start_indices list is used to determine how to subdivide the coordinates list into separate poly-lines when rendering.
   * - progress
     - double
     - 
     - Progress of the contour sets being sent. If this is zero, the message is assumed to contain the entire contour sets

.. cssclass:: b2f

.. _contourset:

ContourSet
^^^^^^^^^^

Source file: `contour_image.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/contour_image.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - level
     - double
     - 
     - 
   * - decimation_factor
     - int32
     - 
     - 
   * - raw_coordinates
     - bytes
     - 
     - 
   * - raw_start_indices
     - bytes
     - 
     - 
   * - uncompressed_coordinates_size
     - int32
     - 
     - 

.. cssclass:: b2f

.. _errordata:

ErrorData
^^^^^^^^^

Source file: `error.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/error.proto>`_

ERROR_DATA:
Stream of error/warning/info data. This stream is used to present the frontend with additional information on
the state of the backend, and is not used in place of returning success=false on requests or commands.

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - severity
     - :carta:`ErrorSeverity`
     - 
     - The severity of the error. Critical errors are reserved for errors that would normally require the user to restart the program or reload the page
   * - tags
     - string
     - repeated
     - A list of strings describing the error type, that the frontend can interpret and react to. For example, “file_io” or “memory”.
   * - message
     - string
     - 
     - The error message
   * - data
     - string
     - 
     - Accompanying error data. For example, if an error has the “file_io” tag, the frontend would expect the data field to contain the file ID of the offending file.

.. cssclass:: b2f

.. _rastertiledata:

RasterTileData
^^^^^^^^^^^^^^

Source file: `raster_tile.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/raster_tile.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the raster image corresponds to
   * - channel
     - sfixed32
     - 
     - The image channel (z-coordinate)
   * - stokes
     - sfixed32
     - 
     - The image stokes coordinate
   * - compression_type
     - :carta:`CompressionType`
     - 
     - The compression algorithm used.
   * - compression_quality
     - float
     - 
     - Compression quality switch
   * - animation_id
     - sfixed32
     - 
     - The ID of the animation (if any)
   * - tiles
     - :carta:`TileData`
     - repeated
     - List of tile data

.. cssclass:: b2f

.. _rastertilesync:

RasterTileSync
^^^^^^^^^^^^^^

Source file: `raster_tile.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/raster_tile.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the raster image corresponds to
   * - channel
     - sfixed32
     - 
     - The image channel (z-coordinate)
   * - stokes
     - sfixed32
     - 
     - The image stokes coordinate
   * - animation_id
     - sfixed32
     - 
     - The ID of the animation (if any)
   * - end_sync
     - bool
     - 
     - Is this a start or end sync message?

.. cssclass:: b2f

.. _tiledata:

TileData
^^^^^^^^

Source file: `raster_tile.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/raster_tile.proto>`_



.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - layer
     - sfixed32
     - 
     - Tile layer coordinate
   * - x
     - sfixed32
     - 
     - Tile x coordinate
   * - y
     - sfixed32
     - 
     - Tile y coordinate
   * - width
     - sfixed32
     - 
     - Width of the tile data. If this is left as zero, the default tile size should be used
   * - height
     - sfixed32
     - 
     - Height of the tile data. If this is left as zero, the default tile size should be used
   * - image_data
     - bytes
     - 
     - Image data. For uncompressed data, this is converted into FP32, while for compressed data, this is passed to the compression library for decompression.
   * - nan_encodings
     - bytes
     - 
     - Run-length encodings of NaN values. These values are used to restore the NaN values after decompression.

.. cssclass:: b2f

.. _regionhistogramdata:

RegionHistogramData
^^^^^^^^^^^^^^^^^^^

Source file: `region_histogram.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/region_histogram.proto>`_

REGION_HISTOGRAM_DATA:
Stats data for a specific region

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the profile corresponds to
   * - region_id
     - sfixed32
     - 
     - The region_id corresponding to these histograms. If the histograms correspond to the entire current 2D image, the region ID has a value of -1.
   * - stokes
     - sfixed32
     - 
     - The image stokes parameter used to generate the profiles
   * - histograms
     - :carta:`Histogram`
     - repeated
     - array of histograms of the current region
   * - progress
     - float
     - 
     - Progress indicator, in the case of partial histogram results being sent

.. cssclass:: b2f

.. _regionstatsdata:

RegionStatsData
^^^^^^^^^^^^^^^

Source file: `region_stats.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/region_stats.proto>`_

REGION_STATS_DATA:
Stats data for a specific region

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the profile corresponds to
   * - region_id
     - sfixed32
     - 
     - The region_id corresponding to this profile. If the statistics data corresponds to the entire current 2D image, the region ID has a value of -1.
   * - channel
     - sfixed32
     - 
     - The image channel used to generate the statistics
   * - stokes
     - sfixed32
     - 
     - The image stokes parameter used to generate the profiles
   * - statistics
     - :carta:`StatisticsValue`
     - repeated
     - Array of statistics values, each corresponding to a particular measurement, such as max, min, mean, etc

.. cssclass:: b2f

.. _spatialprofiledata:

SpatialProfileData
^^^^^^^^^^^^^^^^^^

Source file: `spatial_profile.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/spatial_profile.proto>`_

SPATIAL_PROFILE_DATA:
Data for spatial profile set for a specific file

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the profile corresponds to
   * - region_id
     - sfixed32
     - 
     - The region_id corresponding to this profile. If the profile corresponds to the cursor position, the region ID is zero.
   * - x
     - sfixed32
     - 
     - The pixel X-coordinate of the profile set
   * - y
     - sfixed32
     - 
     - The pixel Y-coordinate of the profile set
   * - channel
     - sfixed32
     - 
     - The image channel used to generate the profiles
   * - stokes
     - sfixed32
     - 
     - The image stokes parameter used to generate the profiles
   * - value
     - float
     - 
     - The value of the image at the given coordinates
   * - profiles
     - :carta:`SpatialProfile`
     - repeated
     - Spatial profiles for each required profile type

.. cssclass:: b2f

.. _spectralprofiledata:

SpectralProfileData
^^^^^^^^^^^^^^^^^^^

Source file: `spectral_profile.proto <https://github.com/CARTAvis/carta-protobuf/blob/dev/stream/spectral_profile.proto>`_

SPECTRAL_PROFILE_DATA:
Data for spectral profile set for a specific file

.. list-table::
   :widths: 25 25 10 40
   :header-rows: 1

   * - Field
     - Type
     - Label
     - Description
   * - file_id
     - sfixed32
     - 
     - The file ID that the profile corresponds to
   * - region_id
     - sfixed32
     - 
     - The region ID that the stats data corresponds to. If the profile corresponds to the cursor position, the region ID has a value of 0.
   * - stokes
     - sfixed32
     - 
     - The image stokes parameter used to generate the profiles
   * - progress
     - float
     - 
     - Progress indicator, in the case of partial profile results being sent. If the profile calculations are time-consuming, regular updates should be sent to the frontend. If the data is complete, progress >= 1.
   * - profiles
     - :carta:`SpectralProfile`
     - repeated
     - Spatial profiles for each required profile type

